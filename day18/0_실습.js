/*
1. 제품 : { 제품번호 : , 제품명: , 가격:}
2. 주문 : {주문번호 : ,주문시간 : , 제품번호:  }

생활속에서 연습
쪼갤수있을만큼 쪼개라 ex)자동주문 '자동'-'주문'

*/

//제품 샘플 (샘플 있으면 선 출력)
let 제품목록 = [
    {제품번호 : 1, 제품명 : '코카콜라', 가격 : 1000,},
    {제품번호 : 2, 제품명 : '사이다', 가격 : 2500,},
    {제품번호 : 3, 제품명 : '아메리카노', 가격 : 1800,}
]

function 제품등록() {
    //1. 입력받은 값을 가져온다.
    let 제품명 = document.querySelector('#제품명').value;
    let 가격 = document.querySelector('#가격').value;
    //2. 데이터를 가공(객체화)
    let 제품번호 = 제품목록[제품목록.length-1].제품번호+1;//현재 제품목록의 마지막 제품번호의  +1, 길이는 1부터 / 인덱스 0부터 / 끝 인덱스 : length -1
    
    let 제품 = {제품번호 : 제품번호, 제품명: 제품명, 가격 : 가격};
    //3. [유효성검사]
    //4. 가공된 데이터(객체)를(배열에) 저장한다.
    제품목록.push(제품);
    alert('제품등록 성공')
    제품출력();
}

//2. 제품출력 함수 : 1. JS가 열렸을때 2. 제품상태가 업데이트 되었을때(수정/삭제/추가)

제품출력();
function 제품출력() { 
    
    //어디에
    let 제품출력구역 = document.querySelector('#제품출력구역');
    //무엇을
    let html = ``;

    for(let i = 0; i < 제품목록.length; i++){
        html += `<tr>
                <td> ${제품목록[i].제품번호}</td>
                <td> ${제품목록[i].제품명}</td>
                <td> ${제품목록[i].가격}</td>
                <td> <button onclick="주문등록( ${제품목록[i].제품번호} )"> 주문</button></td>
                </tr>`
    }
    //출력
    제품출력구역.innerHTML = html;
}

let 주문목록 = [
    {주문번호 : 1, 주문일자 : '2024-05-30 17:00', 제품번호 : 2},
    {주문번호 : 2, 주문일자 : '2024-05-30 17:51', 제품번호 : 2}
]

//3. 주문 : 1.주문버튼을 클릭했을때.
function 주문등록(제품번호){ console.log('주문등록()'+제품번호);
    //1.
    //2. 데이터 가공 (객체화 : 저장 어떻게(형식)으로 저장할지 구성)
    let 주문번호 = 주문목록[주문목록.length-1].주문번호+1; //마지막 주문번호에 +1, 마지막주문번호 = 마지막인덱스의주문번호 = 배열.length-1
    let date = new Date();
    let 주문일자 = `${date.getFullYear()}-${자릿수변환(date.getMonth()+1)}-${자릿수변환(date.getDate())} ${자릿수변환(date.getHours())}:${자릿수변환(date.getMinutes())}`;
    
    let 주문 = {주문번호 : 주문번호, 주문일자 : 주문일자 , 제품번호: 제품번호};
    //3. 유효성검사 (패스)
    //4. 저장
    주문목록.push(주문);
    alert('성공'); console.log(주문목록);
}

//*날짜/숫자 2자리 변환 함수
function 자릿수변환(변환할값) {
    //만약에 월/일/시/분 이 매개변수(변환할값) 가 10보다 작으면 앞에 '0'연결하기
    if(변환활값<10){변환할값 = '0'+변환할값;}
    //반환
    return 변환할값;
}

